Working with Functions
 

Scenario
The database operations team has created a relational database named world containing three tables: city, country, and countrylanguage.
Based on specific use cases in the lab exercise, you write a few queries using database functions with the SELECT statement and WHERE clause.

 objectives
This lab demonstrates how to use some common database functions with the SELECT statement and WHERE clause.

After completing this lab, you should be able to:

Use aggregate functions SUM(), MIN(), MAX(), and AVG() to summarize data
Use the SUBSTRING_INDEX() function to split strings
Use the LENGTH() and TRIM() functions to determine the length of a string
Use the DISTINCT() function to filter duplicate records
Use functions in the SELECT statement and WHERE clause
When you start the lab, the following resources are already created for you:

 

Task 1: Connect to the Command Host

To configure the terminal to access all required tools and resources, run the following command:

sudo su
cd /home/ec2-user/
mysql -u root --password='re:St@rt!9'
 

Task 2: Query the world database

To show the existing databases, enter the following command in the terminal.

SHOW DATABASES;

Verify that a database named world is available. If the world database is not available, contact your instructor.

SELECT * FROM world.country;

The following query demonstrates how to use aggregate functions SUM(), MIN(), MAX(), and AVG() to summarize data. Because the query does not include a WHERE condition, the functions aggregate data from all records in the country table. Run the following query.

SELECT sum(Population), avg(Population), max(Population), min(Population), count(Population) FROM world.country;
+-----------------+-----------------+-----------------+-----------------+-------------------+
| sum(Population) | avg(Population) | max(Population) | min(Population) | count(Population) |
+-----------------+-----------------+-----------------+-----------------+-------------------+
|      6078749450 |   25434098.1172 |      1277558000 |               0 |               239 |
+-----------------+-----------------+-----------------+-----------------+-------------------+

SUM() adds all the population values together.
AVG() generates an average across all the population values.
MAX() finds the row with the highest population value.
MIN() finds the row with the lowest population value.
COUNT() finds the number of rows with a population value.
In some cases, you might need to split a string. The following query uses SUBSTRING_FUNCTION() to spilt a string where a space occurs. Run the following query.

SELECT Region, substring_index(Region, " ", 1) FROM world.country;
After you run the query, you notice that the second column includes the beginning of each region name. 

Sometimes you may need to search rows using a string fragment. The following query includes SUBSTRING_FUNCTION() as part of a condition in the WHERE clause to filter records that include Southern in the first part of the region name. Run the following query.

SELECT Name, Region from world.country WHERE substring_index(Region, " ", 1) = "Southern";
You can use the LENGTH() and TRIM() functions to determine how many characters are in a string. TRIM() clears leading and trailing blank spaces, and the LENGTH() function returns a count of the remaining characters. The next example returns only regions that have fewer than 10 characters in their names. Run the following query.

SELECT Region FROM world.country WHERE LENGTH(TRIM(Region)) < 10;

Filter the duplicates. 

SELECT DISTINCT(Region) FROM world.country WHERE LENGTH(TRIM(Region)) < 10;
 +-----------+
| Region    |
+-----------+
| Caribbean |
| Polynesia |
| Melanesia |

Challenge

Write a query to return rows that have Micronesian/Caribbean as the name in the region column.
The output should split the region as Micronesia and Caribbean into two separate columns: one named Region Name 1 and one named Region Name 2.
SELECT Name, substring_index(Region, "/", 1) as "Region Name 1",substring_index(region, "/", -1) as "Region Name 2" FROM world.country WHERE Region = "Micronesia/Caribbean";

 

